/**
 * Created by ${author} on ${createDate?date}.
 */
'use strict';

app.controller('${entityNameUpperCase}Ctrl', function ${entityNameUpperCase}Ctrl($scope, $modal, $interval, $stateParams, resourceService, toaster) {

    $scope.breadcrumbs = [
        {'path': 'app.${routePath}', 'name': '${routeDisplayName}'}
    ];

    ///////////// table ///////////////
    var uuid = $stateParams.uuid;
    $scope.queryParams = {"conditions":[]};
    if(uuid) {
        $scope.queryParams.conditions.push({"name":"uuid","op":"=","value":uuid});
    }
    $scope.dataArr = [];
    $scope.colArr = [
<#list fields as field>
    <#if field.table?string == "true">
        <#if field.value == "name">
        {
            field: '${field.value}',
            displayName: '${field.name}',
            cellTemplate: '<a class="text-info" ui-sref="app.${routePath}_detail({uuid: row.entity.uuid})">{{ row.entity.name }}</a>'
        },
        <#elseif field.value == "state" || field.value == "status">
        {
            field: '${field.value}',
            displayName: '${field.name}',
            cellTemplate: '<sf-state type="${entityNameLowerCase}" state="row.entity.${field.value}"></sf-state>'
        },
        <#else>
        {
            field: '${field.value}',
            displayName: '${field.name}',
        },
        </#if>
    </#if>
</#list>
    ];

    $scope.params = {grid: {}, fun: {}};

    // callback function
    $scope.callFn = function(item){
        $scope.selectedItem = item;
    };

    function getAjaxData() {
        resourceService.${entityNameLowerCase}_query($scope.queryParams).then(function(response){
            if(response.status || response.errorCode==0){
                $scope.dataArr = response.result;
            }
        });
    };

    $scope.loadData = function() {
        getAjaxData();
    };

    $scope.loadData();

    $scope.refresh = function(){
        $scope.queryParams = {"conditions":[]};
        getAjaxData();
    };

    ///////////// Events ///////////////
    $scope.search = function() {
        var dataStructure = [
        <#list fields as field>
            <#if field.query?string == "true">
                {'name': '${field.name}', 'value':'${field.value}', 'type':'${field.type}'},
            </#if>
        </#list>
        ];
        $scope.params.dataStructure = dataStructure;
        $scope.params.module = '${entityNameLowerCase}';
        var modalInstance = $modal.open({
            backdrop: false,
            templateUrl: '${entityNameLowerCase}_search',
            controller: 'SearchCtrl',
            resolve: {
                params: function () {
                    return $scope.params;
                }
            }
        });
        modalInstance.result.then(function (result) {
            $scope.queryParams.conditions = result;
            $scope.loadData();
        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };

    $scope.intervals = [];
    $scope.intervalIndex = 0;
    $scope.jobQuery = function(jobId, index) {
        index--;
        resourceService.job_query({"jobId": jobId}).then(function(result){
            if(result.success==false) {
                toaster.pop('error', result.error.description, result.error.details);
                $interval.cancel($scope.intervals[index]);
                $scope.intervals.splice(index, 1);
            } else {
                if(result.state && result.state != 'Processing') {
                    $scope.refresh();
                    $interval.cancel($scope.intervals[index]);
                    $scope.intervals.splice(index, 1);
                }
            }
        });
    };

    $scope.$on('$destroy', function(){
        angular.forEach($scope.intervals, function(value, key){
            $interval.cancel(value);
        });
    });

    $scope.create = function(){
        var modalInstance = $modal.open({
            backdrop: false,
            templateUrl: '${entityNameLowerCase}_create',
            controller: '${entityNameUpperCase}CreateCtrl',
            resolve: {
                params: function () {
                    return $scope.params;
                }
            }
        });

        modalInstance.result.then(function (response) {
            if(response && response.uuid!=""){
                var uuid = response.uuid;
                $scope.intervals[$scope.intervalIndex] = $interval(function(){
                    $scope.jobQuery(uuid, $scope.intervalIndex);
                }, 2000);
                $scope.intervalIndex ++ ;
            }
        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };

    $scope.delete = function (size) {
        if (!$scope.selectedItem) {
            window.wxc.xcConfirm("未选择删除的资源！", window.wxc.xcConfirm.typeEnum.info);
            return;
        }
        var modalInstance = $modal.open({
            backdrop: false,
            templateUrl: '${entityNameLowerCase}_delete',
            controller: 'DeleteCtrl',
            size: 'modal-sm',
            resolve: {
                params: function () {
                    return $scope.selectedItem;
                }
            }
        });

        modalInstance.result.then(function (deletingItemUuid) {
            resourceService.${entityNameLowerCase}_delete({"uuid": deletingItemUuid}).then(function(response){
                if(response.status || response.errorCode==0){
                    toaster.pop('success', '', '${routeDisplayName}删除操作提交成功,请等待结果!');
                    $scope.intervals[$scope.intervalIndex] = $interval(function(){
                        $scope.jobQuery(response.result.uuid, $scope.intervalIndex);
                    }, 2000);
                    $scope.intervalIndex ++ ;
                } else {
                    toaster.pop('error', '', '${routeDisplayName}删除操作提交失败,请联系管理员!');
                }
            });
        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };

<#list operations as operation>
<#if operation.modal?string == "true">
    $scope.${operation.name} = function() {
        var modalInstance = $modal.open({
            backdrop: false,
            templateUrl: '${entityNameLowerCase}_${operation.name}',
            controller: '${entityNameUpperCase}${operation.nameUpper}Ctrl',
            size: 'modal-sm',
            resolve: {
                selectedItem: function () {
                    return $scope.selectedItem;
                }
            }
        });

        modalInstance.result.then(function (response) {
            if(response && response.uuid!=""){
                var uuid = response.uuid;
                $scope.intervals[$scope.intervalIndex] = $interval(function(){
                    $scope.jobQuery(uuid, $scope.intervalIndex);
                }, 2000);
                $scope.intervalIndex ++ ;
            }
        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };

<#else>
    $scope.${operation.name} = function() {
        if (!$scope.selectedItem) {
            window.wxc.xcConfirm("请选择要操作的资源!", window.wxc.xcConfirm.typeEnum.info);
            return;
        }
        resourceService.${entityNameLowerCase}_${operation.name}({"uuid": $scope.selectedItem.uuid}).then(function(response){
            if(response.status || response.errorCode==0){
                toaster.pop('success', '', '${routeDisplayName}${operation.displayName}操作提交成功,请等待结果!');
                $scope.intervals[$scope.intervalIndex] = $interval(function(){
                    $scope.jobQuery(response.result.uuid, $scope.intervalIndex);
                }, 2000);
                $scope.intervalIndex ++ ;
            } else {
                toaster.pop('error', '', '${routeDisplayName}${operation.displayName}操作提交失败,请联系管理员!');
            }
        });
    };

</#if>
</#list>

});

app.controller('${entityNameUpperCase}DetailCtrl', function ${entityNameUpperCase}DetailCtr($scope, $stateParams, resourceService){

    var uuid = $stateParams.uuid;

    getByUUID(uuid);

    function getByUUID(uuid) {
        $scope.queryParams = {"conditions":[{"name": "uuid", "value": uuid, "op":"="}]};
        resourceService.${entityNameLowerCase}_query($scope.queryParams).then(function(response){
            if(response.status || response.errorCode==0){
                $scope.current = response.result[0];
                $scope.breadcrumbs = [
                    {'path': 'app.${routePath}', 'name': '${routeDisplayName}'},
                    {'path': 'app.${routePath}_detail({uuid: "'+ $scope.current.name +'"})', 'name': $scope.current.name }
                ];
            }
        });
    };
});

app.controller('${entityNameUpperCase}CreateCtrl', ['$scope', '$modalInstance', 'resourceService', 'params', 'toaster',
    function ($scope, $modalInstance, resourceService, params, toaster){

    $scope.create${entityNameUpperCase} = {};
    $scope.create${entityNameUpperCase}.name = '${entityNameLowerCase}_' + Utils.randomChar(4);
    $scope.ok = function (isValid, add) {
        if (!isValid) return;
        $modalInstance.close($scope.grid);
        createAjax(add);
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };

    function createAjax(parameters) {
        resourceService.${entityNameLowerCase}_create(parameters).then(function(response){
            if(response.status || response.errorCode==0){
                toaster.pop('success', '', "${routeDisplayName}创建操作成功,请等待结果!");
                $modalInstance.close(response.result);
            } else {
                toaster.pop('error', '', '${routeDisplayName}创建操作失败,请联系管理员!');
                $modalInstance.close();
            }
        });
    }
}]);

<#list operations as operation>
<#if operation.modal?string == "true">
app.controller('${entityNameUpperCase}${operation.nameUpper}Ctrl', ['$scope', '$modalInstance', 'selectedItem', 'resourceService', 'toaster',
    function ($scope, $modalInstance, selectedItem, resourceService, toaster) {

    $scope.${operation.name} = {};
    $scope.${operation.name}.name = "${operation.name}_" + Utils.randomChar(4);
    $scope.ok = function (isValid, ${operation.name}) {
        if (!isValid) return;
        ${operation.name}.${entityNameLowerCase}Uuid = selectedItem.uuid;
        resourceService.${entityNameLowerCase}_${operation.name}(${operation.name}).then(function(response){
            if(response.status || response.errorCode==0){
                toaster.pop('success', '', '${routeDisplayName}${operation.displayName}操作提交成功,请等待结果!');
                $modalInstance.close(response.result);
            } else {
                toaster.pop('error', '', '${routeDisplayName}${operation.displayName}操作提交失败,请联系管理员!');
                $modalInstance.close();
            }
        });
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };
}]);

<#else>
</#if>
</#list>
